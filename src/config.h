#pragma once
#include <Arduino.h>
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// настройки отладочного режима
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define _DEBUG				// закомментировать для выключения отладочного режима
#define DEBUG_SERIAL Serial // какой Serial использовать для вывода отладочной информации
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// настройки для хранения информации в хранилище
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define SETT_HEADER1 0x24 // байты, сигнализирующие о наличии сохранённых настроек, первый
#define SETT_HEADER2 0x19 // и второй
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// настройки кнопки (button)
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define BOUNCE_INTERVAL  70 // длительность отслеживания дребезга.
#define DOUBLECLICK_INTERVAL 200 // длительность отслеживания двойного клика.
#define INACTIVITY_INTERVAL 5000 // длительность отслеживания неактивности.
#define RETENTION_INTERVAL 2000 // длительность отслеживания нажатия и удержания.
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// настройки транспорта RS-485
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define STX1 0xAB	// первый байт начала фрейма
#define STX2 0xBA	// второй байт начала фрейма
#define ETX1 0xDE	// первый байт окончания фрейма
#define ETX2 0xAD	// второй байт окончания фрейма
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// настройки текстовых команд для контроллера
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#define CORE_COMMAND_GET F("GET=") // префикс для команды получения данных из ядра
#define CORE_COMMAND_SET F("SET=") // префикс для команды сохранения данных в ядро
#define CORE_COMMAND_ANSWER_OK F("OK=") // какой префикс будет посылаться в ответ на команду получения данных и её успешной отработке
#define CORE_COMMAND_ANSWER_ERROR F("ER=") // какой префикс будет посылаться в ответ на команду получения данных и её неуспешной отработке
#define CORE_COMMAND_PARAM_DELIMITER '|' // разделитель параметров


//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#ifdef _DEBUG
  #define DBG(s) { DEBUG_SERIAL.print((s)); }
  #define DBGLN(s) { DEBUG_SERIAL.println((s)); }
#else
  #define DBG(s) (void) 0
  #define DBGLN(s) (void) 0
#endif
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
template <typename T> inline Stream& operator << (Stream &s, T n) { s.print(n); return s; }
#define ENDLINE "\r\n"